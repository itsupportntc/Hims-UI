{"ast":null,"code":"/**\n * Save class provide method to save file\n * ```typescript\n * let blob : Blob = new Blob([''], { type: 'text/plain' });\n * Save.save('fileName.txt',blob);\n */\nvar Save =\n/** @__PURE__ @class */\nfunction () {\n  /**\n   * Initialize new instance of {save}\n   */\n  function Save() {// tslint:disable\n  }\n  /**\n   * Saves the file with specified name and sends the file to client browser\n   * @param  {string} fileName- file name to save.\n   * @param  {Blob} buffer- the content to write in file\n   * @param  {boolean} isMicrosoftBrowser- specify whether microsoft browser or not\n   * @returns {void}\n   */\n\n\n  Save.save = function (fileName, buffer) {\n    if (fileName === null || fileName === undefined || fileName === '') {\n      throw new Error('ArgumentException: fileName cannot be undefined, null or empty');\n    }\n\n    var extension = fileName.substring(fileName.lastIndexOf('.') + 1, fileName.length);\n    var mimeType = this.getMimeType(extension);\n\n    if (mimeType !== '') {\n      buffer = new Blob([buffer], {\n        type: mimeType\n      });\n    }\n\n    if (this.isMicrosoftBrowser) {\n      navigator.msSaveBlob(buffer, fileName);\n    } else {\n      var downloadLink = document.createElementNS('http://www.w3.org/1999/xhtml', 'a');\n      this.saveInternal(fileName, extension, buffer, downloadLink, 'download' in downloadLink);\n    }\n  };\n\n  Save.saveInternal = function (fileName, extension, buffer, downloadLink, hasDownloadAttribute) {\n    if (hasDownloadAttribute) {\n      downloadLink.download = fileName;\n      var dataUrl_1 = window.URL.createObjectURL(buffer);\n      downloadLink.href = dataUrl_1;\n      var event_1 = document.createEvent('MouseEvent');\n      event_1.initEvent('click', true, true);\n      downloadLink.dispatchEvent(event_1);\n      setTimeout(function () {\n        window.URL.revokeObjectURL(dataUrl_1);\n        dataUrl_1 = undefined;\n      });\n    } else {\n      if (extension !== 'docx' && extension !== 'xlsx') {\n        var url = window.URL.createObjectURL(buffer);\n        var isPopupBlocked = window.open(url, '_blank');\n\n        if (!isPopupBlocked) {\n          window.location.href = url;\n        }\n      } else {\n        var reader_1 = new FileReader();\n\n        reader_1.onloadend = function () {\n          var isPopupBlocked = window.open(reader_1.result, '_blank');\n\n          if (!isPopupBlocked) {\n            window.location.href = reader_1.result;\n          }\n        };\n\n        reader_1.readAsDataURL(buffer);\n      }\n    }\n  };\n  /**\n   *\n   * @param {string} extension - get mime type of the specified extension\n   * @private\n   */\n\n\n  Save.getMimeType = function (extension) {\n    var mimeType = '';\n\n    switch (extension) {\n      case 'html':\n        mimeType = 'text/html';\n        break;\n\n      case 'pdf':\n        mimeType = 'application/pdf';\n        break;\n\n      case 'docx':\n        mimeType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';\n        break;\n\n      case 'xlsx':\n        mimeType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\n        break;\n\n      case 'txt':\n        mimeType = 'text/plain';\n        break;\n    }\n\n    return mimeType;\n  };\n\n  return Save;\n}();\n/**\n * XmlWriter class provide method to create XML data\n */\n\n\nvar XmlWriter =\n/** @__PURE__ @class */\nfunction () {\n  /**\n   * Initialize new instance of {XmlWriter}\n   */\n  function XmlWriter() {\n    this.contentPos = 0;\n    this.bufferText = '';\n    this.bufferBlob = new Blob([''], {\n      type: 'text/plain'\n    });\n    this.currentState = 'Initial';\n    this.namespaceStack = [];\n    this.namespaceStack.push(new Namespace());\n    this.namespaceStack[0].set('xmlns', 'http://www.w3.org/2000/xmlns/', 'Special');\n    this.namespaceStack.push(new Namespace());\n    this.namespaceStack[1].set('xml', 'http://www.w3.org/XML/1998/namespace', 'Special');\n    this.namespaceStack.push(new Namespace());\n    this.namespaceStack[2].set('', '', 'Implied');\n    this.elementStack = [];\n    this.elementStack.push(new XmlElement());\n    this.elementStack[0].set('', '', '', this.namespaceStack.length - 1);\n    this.attributeStack = [];\n    Save.isMicrosoftBrowser = !!navigator.msSaveBlob;\n  }\n\n  Object.defineProperty(XmlWriter.prototype, \"buffer\", {\n    /**\n     * Gets the content written to the {XmlWriter} as Blob.\n     * @returns {Blob}\n     */\n    get: function () {\n      this.flush();\n      return this.bufferBlob;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Writes processing instruction with a space between the name and text\n   * @param {string} name - name of the processing instruction\n   * @param {string} text - text to write in the processing instruction\n   * @throws ArgumentException\n   * @throws InvalidArgumentException\n   * @throws InvalidOperationException\n   */\n\n  XmlWriter.prototype.writeProcessingInstruction = function (name, text) {\n    if (name === undefined || name === null || name.length === 0) {\n      throw new Error('ArgumentException: name should not be undefined, null or empty');\n    }\n\n    this.checkName(name);\n\n    if (text === undefined || text === null) {\n      text = '';\n    }\n\n    if (name.length === 3 && name === 'xml') {\n      if (this.currentState !== 'Initial') {\n        // tslint:disable-next-line:max-line-length\n        throw new Error('InvalidArgumentException: Cannot write XML declaration.WriteStartDocument method has already written it');\n      }\n    }\n\n    if (this.currentState !== 'Initial' || this.bufferBlob === undefined) {\n      throw new Error('InvalidOperationException: Wrong Token');\n    } else {\n      this.writeStartDocument();\n      this.writeProcessingInstructionInternal(name, text);\n    }\n  };\n  /**\n   * Writes Xml declaration with version and standalone attribute\n   * @param {boolean} standalone - if true it write standalone=yes else standalone=no\n   * @throws InvalidOperation\n   */\n\n\n  XmlWriter.prototype.writeStartDocument = function (standalone) {\n    if (this.currentState !== 'Initial' || this.bufferBlob === undefined) {\n      throw new Error('InvalidOperationException: Wrong Token');\n    }\n\n    this.currentState = 'StartDocument';\n    this.rawText('<?xml version=\"1.0\" encoding=\"utf-8');\n\n    if (standalone !== null && standalone !== undefined) {\n      this.rawText('\" standalone=\"');\n      this.rawText(standalone ? 'yes' : 'no');\n    }\n\n    this.rawText('\"?>');\n  };\n  /**\n   * Closes any open tag or attribute and write the state back to start\n   */\n\n\n  XmlWriter.prototype.writeEndDocument = function () {\n    while (this.elementStack.length - 1 > 0) {\n      this.writeEndElement();\n    }\n\n    this.currentState = 'EndDocument';\n    this.flush();\n  };\n  /**\n   * Writes the specified start tag and associates it with the given namespace and prefix.\n   * @param {string} prefix - namespace prefix of element\n   * @param {string} localName -localName of element\n   * @param {string} namespace - namespace URI associate with element\n   * @throws ArgumentException\n   * @throws InvalidOperationException\n   */\n\n\n  XmlWriter.prototype.writeStartElement = function (prefix, localName, namespace) {\n    if (this.bufferBlob === undefined) {\n      throw new Error('InvalidOperationException: Wrong Token');\n    }\n\n    if (localName === undefined || localName === null || localName.length === 0) {\n      throw new Error('ArgumentException: localName cannot be undefined, null or empty');\n    }\n\n    this.checkName(localName);\n\n    if (this.currentState === 'Initial') {\n      this.writeStartDocument();\n    }\n\n    if (this.currentState === 'StartElement') {\n      this.startElementContent();\n    }\n\n    this.currentState = 'StartElement';\n\n    if (prefix === undefined || prefix === null) {\n      if (namespace !== undefined && namespace !== null) {\n        prefix = this.lookupPrefix(namespace);\n      }\n\n      if (prefix === undefined || prefix === null) {\n        prefix = '';\n      }\n    } else if (prefix.length > 0) {\n      if (namespace === undefined || namespace === null) {\n        namespace = this.lookupNamespace(prefix);\n      }\n\n      if (namespace === undefined || namespace === null || namespace !== undefined && namespace.length === 0) {\n        throw new Error('ArgumentException: Cannot use a prefix with an empty namespace');\n      }\n    }\n\n    if (namespace === undefined || namespace === null) {\n      namespace = this.lookupNamespace(prefix);\n    }\n\n    this.writeStartElementInternal(prefix, localName, namespace);\n  };\n  /**\n   * Closes one element and pop corresponding namespace scope\n   */\n\n\n  XmlWriter.prototype.writeEndElement = function () {\n    if (this.currentState === 'StartElement') {\n      this.startElementContent();\n      this.currentState = 'ElementContent';\n    } else if (this.currentState === 'ElementContent') {\n      this.currentState = 'ElementContent';\n    }\n\n    this.currentState = 'EndElement';\n    var top = this.elementStack.length - 1;\n    this.writeEndElementInternal(this.elementStack[top].prefix, this.elementStack[top].localName);\n    this.namespaceStack.splice(this.elementStack[top].previousTop + 1);\n    this.elementStack.splice(top);\n\n    if (this.bufferText.length > 10240) {\n      this.flush();\n    }\n  };\n  /**\n   * Writes an element with the specified prefix, local name, namespace URI, and value.\n   * @param {string} prefix - namespace prefix of element\n   * @param {string} localName - localName of element\n   * @param {string} namespace - namespace URI associate with element\n   * @param {string} value - value of element\n   */\n\n\n  XmlWriter.prototype.writeElementString = function (prefix, localName, namespace, value) {\n    this.writeStartElement(prefix, localName, namespace);\n\n    if (value !== undefined && value !== null && value.length !== 0) {\n      this.writeString(value);\n    }\n\n    this.writeEndElement();\n  };\n  /**\n   * Writes out the attribute with the specified prefix, local name, namespace URI, and value\n   * @param {string} prefix - namespace prefix of element\n   * @param {string} localName - localName of element\n   * @param {string} namespace - namespace URI associate with element\n   * @param {string} value - value of element\n   */\n\n\n  XmlWriter.prototype.writeAttributeString = function (prefix, localName, namespace, value) {\n    this.writeStartAttribute(prefix, localName, namespace, value);\n    this.writeStringInternal(value, true);\n    this.writeEndAttribute();\n  };\n  /**\n   * Writes the given text content\n   * @param {string} text - text to write\n   * @throws InvalidOperationException\n   */\n\n\n  XmlWriter.prototype.writeString = function (text) {\n    this.writeInternal(text, false);\n  };\n  /**\n   * Write given text as raw data\n   * @param {string} text - text to write\n   * @throws InvalidOperationException\n   */\n\n\n  XmlWriter.prototype.writeRaw = function (text) {\n    this.writeInternal(text, true);\n  };\n\n  XmlWriter.prototype.writeInternal = function (text, isRawString) {\n    if (text === undefined || text === null) {\n      return;\n    } else {\n      if (this.currentState !== 'StartElement' && this.currentState !== 'ElementContent') {\n        throw new Error('InvalidOperationException: Wrong Token');\n      }\n\n      if (this.currentState === 'StartElement') {\n        this.startElementContent();\n      }\n\n      this.currentState = 'ElementContent';\n\n      if (isRawString) {\n        this.rawText(text);\n      } else {\n        this.writeStringInternal(text, false);\n      }\n    }\n  };\n  /**\n   * Saves the file with specified name and sends the file to client browser\n   * @param {string} fileName - file name\n   */\n\n\n  XmlWriter.prototype.save = function (fileName) {\n    while (this.elementStack.length - 1 > 0) {\n      this.writeEndElement();\n    }\n\n    if (this.bufferText !== '') {\n      this.flush();\n    }\n\n    Save.save(fileName, this.buffer);\n  };\n  /**\n   * Releases the resources used by XmlWriter.\n   */\n\n\n  XmlWriter.prototype.destroy = function () {\n    this.bufferBlob = undefined;\n\n    for (var i = 0; i < this.namespaceStack.length; i++) {\n      this.namespaceStack[i].destroy();\n    }\n\n    this.namespaceStack = [];\n\n    for (var i = 0; i < this.elementStack.length; i++) {\n      this.elementStack[i].destroy();\n    }\n\n    this.elementStack = [];\n    this.bufferText = '';\n    this.contentPos = 0;\n  };\n\n  XmlWriter.prototype.flush = function () {\n    if (this.bufferBlob === undefined) {\n      return;\n    }\n\n    this.bufferBlob = new Blob([this.bufferBlob, this.bufferText], {\n      type: 'text/plain'\n    });\n    this.bufferText = '';\n  };\n\n  XmlWriter.prototype.writeProcessingInstructionInternal = function (name, text) {\n    this.bufferText += '<?';\n    this.rawText(name);\n\n    if (text.length > 0) {\n      this.bufferText += ' ';\n      text = text.replace(/\\?\\>/g, '? >');\n      this.bufferText += text;\n    }\n\n    this.bufferText += '?';\n    this.bufferText += '>';\n  };\n\n  XmlWriter.prototype.writeStartAttribute = function (prefix, localName, namespace, value) {\n    if (localName === undefined || localName === null || localName.length === 0) {\n      if (prefix === 'xmlns') {\n        localName = 'xmlns';\n        prefix = '';\n      } else {\n        throw new Error('ArgumentException: localName cannot be undefined, null or empty');\n      }\n    }\n\n    if (this.currentState !== 'StartElement') {\n      throw new Error('InvalidOperationException: Wrong Token');\n    }\n\n    this.checkName(localName);\n    this.writeStartAttributePrefixAndNameSpace(prefix, localName, namespace, value);\n  };\n\n  XmlWriter.prototype.writeStartAttributePrefixAndNameSpace = function (prefix, localName, namespace, value) {\n    if (prefix === undefined || prefix === null) {\n      if (namespace !== undefined && namespace !== null) {\n        if (!(localName === 'xmlns' && namespace === 'http://www.w3.org/2000/xmlns/')) {\n          prefix = this.lookupPrefix(namespace);\n        }\n      }\n\n      if (prefix === undefined || prefix === null) {\n        prefix = '';\n      }\n    }\n\n    if (namespace === undefined || namespace === null) {\n      if (prefix !== undefined && prefix !== null && prefix.length > 0) {\n        namespace = this.lookupNamespace(prefix);\n      }\n\n      if (namespace === undefined || namespace === null) {\n        namespace = '';\n      }\n    }\n\n    this.writeStartAttributeSpecialAttribute(prefix, localName, namespace, value);\n  };\n\n  XmlWriter.prototype.writeStartAttributeSpecialAttribute = function (prefix, localName, namespace, value) {\n    if (prefix.length === 0) {\n      if (localName[0] === 'x' && localName === 'xmlns') {\n        this.skipPushAndWrite(prefix, localName, namespace);\n        this.pushNamespaceExplicit('', value);\n        return;\n      } else if (namespace.length > 0) {\n        prefix = this.lookupPrefix(namespace);\n      }\n    } else {\n      if (prefix[0] === 'x') {\n        if (prefix === 'xmlns') {\n          this.skipPushAndWrite(prefix, localName, namespace);\n          this.pushNamespaceExplicit(localName, value);\n          return;\n        } else if (prefix === 'xml') {\n          if (localName === 'space' || localName === 'lang') {\n            this.skipPushAndWrite(prefix, localName, namespace);\n            return;\n          }\n        }\n      }\n\n      if (namespace.length === 0) {\n        prefix = '';\n      }\n    }\n\n    if (prefix !== undefined && prefix !== null && prefix.length !== 0) {\n      this.pushNamespaceImplicit(prefix, namespace);\n    }\n\n    this.skipPushAndWrite(prefix, localName, namespace);\n  };\n\n  XmlWriter.prototype.writeEndAttribute = function () {\n    this.currentState = 'StartElement';\n    this.bufferText += '\"';\n  };\n\n  XmlWriter.prototype.writeStartElementInternal = function (prefix, localName, namespace) {\n    this.bufferText += '<';\n\n    if (prefix.length > 0) {\n      this.rawText(prefix);\n      this.bufferText += ':';\n    }\n\n    this.rawText(localName);\n    var top = this.elementStack.length;\n    this.elementStack.push(new XmlElement());\n    this.elementStack[top].set(prefix, localName, namespace, this.namespaceStack.length - 1);\n    this.pushNamespaceImplicit(prefix, namespace);\n\n    for (var i = 0; i < this.attributeStack.length; i++) {\n      this.attributeStack[i].destroy();\n    }\n\n    this.attributeStack = [];\n  };\n\n  XmlWriter.prototype.writeEndElementInternal = function (prefix, localName) {\n    if (this.contentPos !== this.bufferText.length + 1) {\n      this.bufferText += '</';\n\n      if (prefix !== undefined && prefix !== null && prefix.length !== 0) {\n        this.rawText(prefix);\n        this.bufferText += ':';\n      }\n\n      this.rawText(localName);\n      this.bufferText += '>';\n    } else {\n      this.bufferText = this.bufferText.substring(0, this.bufferText.length - 1);\n      this.bufferText += ' />';\n    }\n  };\n\n  XmlWriter.prototype.writeStartAttributeInternal = function (prefix, localName, namespaceName) {\n    this.bufferText += ' ';\n\n    if (prefix !== undefined && prefix !== null && prefix.length > 0) {\n      this.rawText(prefix);\n      this.bufferText += ':';\n    }\n\n    this.rawText(localName);\n    this.bufferText += '=';\n    this.bufferText += '\"';\n  };\n\n  XmlWriter.prototype.writeNamespaceDeclaration = function (prefix, namespaceUri) {\n    this.writeStartNamespaceDeclaration(prefix);\n    this.writeStringInternal(namespaceUri, true);\n    this.bufferText += '\"';\n  };\n\n  XmlWriter.prototype.writeStartNamespaceDeclaration = function (prefix) {\n    if (prefix === undefined || prefix === null || prefix.length === 0) {\n      this.rawText(' xmlns=\\\"');\n    } else {\n      this.rawText(' xmlns:');\n      this.rawText(prefix);\n      this.bufferText += '=';\n      this.bufferText += '\"';\n    }\n  };\n\n  XmlWriter.prototype.writeStringInternal = function (text, inAttributeValue) {\n    if (text === null || text === undefined) {\n      text = '';\n    }\n\n    text = text.replace(/\\&/g, '&amp;');\n    text = text.replace(/\\</g, '&lt;');\n    text = text.replace(/\\>/g, '&gt;');\n\n    if (inAttributeValue) {\n      text = text.replace(/\\\"/g, '&quot;');\n    }\n\n    this.bufferText += text;\n\n    if (!inAttributeValue) {\n      this.contentPos = 0;\n    }\n  };\n\n  XmlWriter.prototype.startElementContent = function () {\n    var start = this.elementStack[this.elementStack.length - 1].previousTop;\n\n    for (var i = this.namespaceStack.length - 1; i > start; i--) {\n      if (this.namespaceStack[i].kind === 'NeedToWrite') {\n        this.writeNamespaceDeclaration(this.namespaceStack[i].prefix, this.namespaceStack[i].namespaceUri);\n      }\n    }\n\n    this.bufferText += '>';\n    this.contentPos = this.bufferText.length + 1;\n  };\n\n  XmlWriter.prototype.rawText = function (text) {\n    this.bufferText += text;\n  };\n\n  XmlWriter.prototype.addNamespace = function (prefix, ns, kind) {\n    var top = this.namespaceStack.length;\n    this.namespaceStack.push(new Namespace());\n    this.namespaceStack[top].set(prefix, ns, kind);\n  };\n\n  XmlWriter.prototype.lookupPrefix = function (namespace) {\n    for (var i = this.namespaceStack.length - 1; i >= 0; i--) {\n      if (this.namespaceStack[i].namespaceUri === namespace) {\n        return this.namespaceStack[i].prefix;\n      }\n    }\n\n    return undefined;\n  };\n\n  XmlWriter.prototype.lookupNamespace = function (prefix) {\n    for (var i = this.namespaceStack.length - 1; i >= 0; i--) {\n      if (this.namespaceStack[i].prefix === prefix) {\n        return this.namespaceStack[i].namespaceUri;\n      }\n    }\n\n    return undefined;\n  };\n\n  XmlWriter.prototype.lookupNamespaceIndex = function (prefix) {\n    for (var i = this.namespaceStack.length - 1; i >= 0; i--) {\n      if (this.namespaceStack[i].prefix === prefix) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  XmlWriter.prototype.pushNamespaceImplicit = function (prefix, ns) {\n    var kind;\n    var existingNsIndex = this.lookupNamespaceIndex(prefix);\n\n    if (existingNsIndex !== -1) {\n      if (existingNsIndex > this.elementStack[this.elementStack.length - 1].previousTop) {\n        if (this.namespaceStack[existingNsIndex].namespaceUri !== ns) {\n          throw new Error('XmlException namespace Uri needs to be the same as the one that is already declared');\n        }\n\n        return;\n      } else {\n        if (this.namespaceStack[existingNsIndex].kind === 'Special') {\n          if (prefix === 'xml') {\n            if (ns !== this.namespaceStack[existingNsIndex].namespaceUri) {\n              throw new Error('InvalidArgumentException: Xml String');\n            } else {\n              kind = 'Implied';\n            }\n          } else {\n            throw new Error('InvalidArgumentException: Prefix \"xmlns\" is reserved for use by XML.');\n          }\n        } else {\n          kind = this.namespaceStack[existingNsIndex].namespaceUri === ns ? 'Implied' : 'NeedToWrite';\n        }\n      }\n    } else {\n      if (ns === 'http://www.w3.org/XML/1998/namespace' && prefix !== 'xml' || ns === 'http://www.w3.org/2000/xmlns/' && prefix !== 'xmlns') {\n        throw new Error('InvalidArgumentException');\n      }\n\n      kind = 'NeedToWrite';\n    }\n\n    this.addNamespace(prefix, ns, kind);\n  };\n\n  XmlWriter.prototype.pushNamespaceExplicit = function (prefix, ns) {\n    var existingNsIndex = this.lookupNamespaceIndex(prefix);\n\n    if (existingNsIndex !== -1) {\n      if (existingNsIndex > this.elementStack[this.elementStack.length - 1].previousTop) {\n        this.namespaceStack[existingNsIndex].kind = 'Written';\n        return;\n      }\n    }\n\n    this.addNamespace(prefix, ns, 'Written');\n    return;\n  };\n\n  XmlWriter.prototype.addAttribute = function (prefix, localName, namespaceName) {\n    var top = this.attributeStack.length;\n    this.attributeStack.push(new XmlAttribute());\n    this.attributeStack[top].set(prefix, localName, namespaceName);\n\n    for (var i = 0; i < top; i++) {\n      if (this.attributeStack[i].isDuplicate(prefix, localName, namespaceName)) {\n        throw new Error('XmlException: duplicate attribute name');\n      }\n    }\n  };\n\n  XmlWriter.prototype.skipPushAndWrite = function (prefix, localName, namespace) {\n    this.addAttribute(prefix, localName, namespace);\n    this.writeStartAttributeInternal(prefix, localName, namespace);\n  };\n\n  XmlWriter.prototype.checkName = function (text) {\n    var format = /[ !@#$%^&*()+\\=\\[\\]{};':\"\\\\|,<>\\/?]/;\n\n    if (format.test(text)) {\n      throw new Error('InvalidArgumentException: invalid name character');\n    }\n  };\n\n  return XmlWriter;\n}();\n/**\n * class for managing namespace collection\n */\n\n\nvar Namespace =\n/** @__PURE__ @class */\nfunction () {\n  function Namespace() {}\n  /**\n   * set value for current namespace instance\n   * @param {string} prefix namespace's prefix\n   * @param {string} namespaceUri namespace URI\n   * @param {string} kind namespace kind\n   */\n\n\n  Namespace.prototype.set = function (prefix, namespaceUri, kind) {\n    this.prefix = prefix;\n    this.namespaceUri = namespaceUri;\n    this.kind = kind;\n  };\n  /**\n   * Releases the resources used by Namespace\n   */\n\n\n  Namespace.prototype.destroy = function () {\n    this.prefix = undefined;\n    this.namespaceUri = undefined;\n    this.kind = undefined;\n  };\n\n  return Namespace;\n}();\n/**\n * class for managing element collection\n */\n\n\nvar XmlElement =\n/** @__PURE__ @class */\nfunction () {\n  function XmlElement() {}\n  /**\n   * set value of current element\n   * @param {string} prefix - element prefix\n   * @param {string} localName - element local name\n   * @param {string} namespaceUri -namespace URI\n   * @param {string} previousTop - previous namespace top\n   */\n\n\n  XmlElement.prototype.set = function (prefix, localName, namespaceUri, previousTop) {\n    this.previousTop = previousTop;\n    this.prefix = prefix;\n    this.namespaceUri = namespaceUri;\n    this.localName = localName;\n  };\n  /**\n   * Releases the resources used by XmlElement\n   */\n\n\n  XmlElement.prototype.destroy = function () {\n    this.previousTop = undefined;\n    this.prefix = undefined;\n    this.localName = undefined;\n    this.namespaceUri = undefined;\n  };\n\n  return XmlElement;\n}();\n/**\n * class for managing attribute collection\n */\n\n\nvar XmlAttribute =\n/** @__PURE__ @class */\nfunction () {\n  function XmlAttribute() {}\n  /**\n   * set value of current attribute\n   * @param {string} prefix - namespace's prefix\n   * @param {string} namespaceUri - namespace URI\n   * @param {string} localName - attribute localName\n   */\n\n\n  XmlAttribute.prototype.set = function (prefix, localName, namespaceUri) {\n    this.prefix = prefix;\n    this.namespaceUri = namespaceUri;\n    this.localName = localName;\n  };\n  /**\n   * get whether the attribute is duplicate or not\n   * @param {string} prefix - namespace's prefix\n   * @param {string} namespaceUri - namespace URI\n   * @param {string} localName - attribute localName\n   */\n\n\n  XmlAttribute.prototype.isDuplicate = function (prefix, localName, namespaceUri) {\n    return this.localName === localName && (this.prefix === prefix || this.namespaceUri === namespaceUri);\n  };\n  /**\n   * Releases the resources used by XmlAttribute\n   */\n\n\n  XmlAttribute.prototype.destroy = function () {\n    this.prefix = undefined;\n    this.namespaceUri = undefined;\n    this.localName = undefined;\n  };\n\n  return XmlAttribute;\n}();\n/**\n * Encoding class: Contains the details about encoding type, whether to write a Unicode byte order mark (BOM).\n * ```typescript\n * let encoding : Encoding = new Encoding();\n * encoding.type = 'Utf8';\n * encoding.getBytes('Encoding', 0, 5);\n * ```\n */\n\n\nvar Encoding =\n/** @__PURE__ @class */\nfunction () {\n  /**\n   * Initializes a new instance of the Encoding class. A parameter specifies whether to write a Unicode byte order mark\n   * @param  {boolean} includeBom?-true to specify that a Unicode byte order mark is written; otherwise, false.\n   */\n  function Encoding(includeBom) {\n    this.emitBOM = true;\n    this.encodingType = 'Ansi';\n    this.initBOM(includeBom);\n  }\n\n  Object.defineProperty(Encoding.prototype, \"includeBom\", {\n    /**\n     * Gets a value indicating whether to write a Unicode byte order mark\n     * @returns boolean- true to specify that a Unicode byte order mark is written; otherwise, false\n     */\n    get: function () {\n      return this.emitBOM;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Encoding.prototype, \"type\", {\n    /**\n     * Gets the encoding type.\n     * @returns EncodingType\n     */\n    get: function () {\n      return this.encodingType;\n    },\n\n    /**\n     * Sets the encoding type.\n     * @param  {EncodingType} value\n     */\n    set: function (value) {\n      this.encodingType = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Initialize the includeBom to emit BOM or Not\n   * @param  {boolean} includeBom\n   */\n\n  Encoding.prototype.initBOM = function (includeBom) {\n    if (includeBom === undefined || includeBom === null) {\n      this.emitBOM = true;\n    } else {\n      this.emitBOM = includeBom;\n    }\n  };\n  /**\n   * Calculates the number of bytes produced by encoding the characters in the specified string\n   * @param  {string} chars - The string containing the set of characters to encode\n   * @returns {number} - The number of bytes produced by encoding the specified characters\n   */\n\n\n  Encoding.prototype.getByteCount = function (chars) {\n    validateNullOrUndefined(chars, 'string');\n\n    if (chars === '') {\n      var byte = this.utf8Len(chars.charCodeAt(0));\n      return byte;\n    }\n\n    if (this.type === null || this.type === undefined) {\n      this.type = 'Ansi';\n    }\n\n    return this.getByteCountInternal(chars, 0, chars.length);\n  };\n  /**\n   * Return the Byte of character\n   * @param  {number} codePoint\n   * @returns {number}\n   */\n\n\n  Encoding.prototype.utf8Len = function (codePoint) {\n    var bytes = codePoint <= 0x7F ? 1 : codePoint <= 0x7FF ? 2 : codePoint <= 0xFFFF ? 3 : codePoint <= 0x1FFFFF ? 4 : 0;\n    return bytes;\n  };\n  /**\n   * for 4 byte character return surrogate pair true, otherwise false\n   * @param  {number} codeUnit\n   * @returns {boolean}\n   */\n\n\n  Encoding.prototype.isHighSurrogate = function (codeUnit) {\n    return codeUnit >= 0xD800 && codeUnit <= 0xDBFF;\n  };\n  /**\n   * for 4byte character generate the surrogate pair\n   * @param  {number} highCodeUnit\n   * @param  {number} lowCodeUnit\n   */\n\n\n  Encoding.prototype.toCodepoint = function (highCodeUnit, lowCodeUnit) {\n    highCodeUnit = (0x3FF & highCodeUnit) << 10;\n    var u = highCodeUnit | 0x3FF & lowCodeUnit;\n    return u + 0x10000;\n  };\n  /**\n   * private method to get the byte count for specific charindex and count\n   * @param  {string} chars\n   * @param  {number} charIndex\n   * @param  {number} charCount\n   */\n\n\n  Encoding.prototype.getByteCountInternal = function (chars, charIndex, charCount) {\n    var byteCount = 0;\n\n    if (this.encodingType === 'Utf8' || this.encodingType === 'Unicode') {\n      var isUtf8 = this.encodingType === 'Utf8';\n\n      for (var i = 0; i < charCount; i++) {\n        var charCode = chars.charCodeAt(isUtf8 ? charIndex : charIndex++);\n\n        if (this.isHighSurrogate(charCode)) {\n          if (isUtf8) {\n            var high = charCode;\n            var low = chars.charCodeAt(++charIndex);\n            byteCount += this.utf8Len(this.toCodepoint(high, low));\n          } else {\n            byteCount += 4;\n            ++i;\n          }\n        } else {\n          if (isUtf8) {\n            byteCount += this.utf8Len(charCode);\n          } else {\n            byteCount += 2;\n          }\n        }\n\n        if (isUtf8) {\n          charIndex++;\n        }\n      }\n\n      return byteCount;\n    } else {\n      byteCount = charCount;\n      return byteCount;\n    }\n  };\n  /**\n   * Encodes a set of characters from the specified string into the ArrayBuffer.\n   * @param  {string} s- The string containing the set of characters to encode\n   * @param  {number} charIndex-The index of the first character to encode.\n   * @param  {number} charCount- The number of characters to encode.\n   * @returns {ArrayBuffer} - The ArrayBuffer that contains the resulting sequence of bytes.\n   */\n\n\n  Encoding.prototype.getBytes = function (s, charIndex, charCount) {\n    validateNullOrUndefined(s, 'string');\n    validateNullOrUndefined(charIndex, 'charIndex');\n    validateNullOrUndefined(charCount, 'charCount');\n\n    if (charIndex < 0 || charCount < 0) {\n      throw new RangeError('Argument Out Of Range Exception: charIndex or charCount is less than zero');\n    }\n\n    if (s.length - charIndex < charCount) {\n      throw new RangeError('Argument Out Of Range Exception: charIndex and charCount do not denote a valid range in string');\n    }\n\n    var bytes;\n\n    if (s === '') {\n      bytes = new ArrayBuffer(0);\n      return bytes;\n    }\n\n    if (this.type === null || this.type === undefined) {\n      this.type = 'Ansi';\n    }\n\n    var byteCount = this.getByteCountInternal(s, charIndex, charCount);\n\n    switch (this.type) {\n      case 'Utf8':\n        bytes = this.getBytesOfUtf8Encoding(byteCount, s, charIndex, charCount);\n        return bytes;\n\n      case 'Unicode':\n        bytes = this.getBytesOfUnicodeEncoding(byteCount, s, charIndex, charCount);\n        return bytes;\n\n      default:\n        bytes = this.getBytesOfAnsiEncoding(byteCount, s, charIndex, charCount);\n        return bytes;\n    }\n  };\n  /**\n   * Decodes a sequence of bytes from the specified ArrayBuffer into the string.\n   * @param  {ArrayBuffer} bytes- The ArrayBuffer containing the sequence of bytes to decode.\n   * @param  {number} index- The index of the first byte to decode.\n   * @param  {number} count- The number of bytes to decode.\n   * @returns {string} - The string that contains the resulting set of characters.\n   */\n\n\n  Encoding.prototype.getString = function (bytes, index, count) {\n    validateNullOrUndefined(bytes, 'bytes');\n    validateNullOrUndefined(index, 'index');\n    validateNullOrUndefined(count, 'count');\n\n    if (index < 0 || count < 0) {\n      throw new RangeError('Argument Out Of Range Exception: index or count is less than zero');\n    }\n\n    if (bytes.byteLength - index < count) {\n      throw new RangeError('Argument Out Of Range Exception: index and count do not denote a valid range in bytes');\n    }\n\n    if (bytes.byteLength === 0 || count === 0) {\n      return '';\n    }\n\n    if (this.type === null || this.type === undefined) {\n      this.type = 'Ansi';\n    }\n\n    var out = '';\n    var byteCal = new Uint8Array(bytes);\n\n    switch (this.type) {\n      case 'Utf8':\n        var s = this.getStringOfUtf8Encoding(byteCal, index, count);\n        return s;\n\n      case 'Unicode':\n        var byteUnicode = new Uint16Array(bytes);\n        out = this.getStringofUnicodeEncoding(byteUnicode, index, count);\n        return out;\n\n      default:\n        var j = index;\n\n        for (var i = 0; i < count; i++) {\n          var c = byteCal[j];\n          out += String.fromCharCode(c); // 1 byte(ASCII) character                  \n\n          j++;\n        }\n\n        return out;\n    }\n  };\n\n  Encoding.prototype.getBytesOfAnsiEncoding = function (byteCount, s, charIndex, charCount) {\n    var bytes = new ArrayBuffer(byteCount);\n    var bufview = new Uint8Array(bytes);\n    var k = 0;\n\n    for (var i = 0; i < charCount; i++) {\n      var charcode = s.charCodeAt(charIndex++);\n\n      if (charcode < 0x800) {\n        bufview[k] = charcode;\n      } else {\n        bufview[k] = 63; //replacement character '?'\n      }\n\n      k++;\n    }\n\n    return bytes;\n  };\n\n  Encoding.prototype.getBytesOfUtf8Encoding = function (byteCount, s, charIndex, charCount) {\n    var bytes = new ArrayBuffer(byteCount);\n    var uint = new Uint8Array(bytes);\n    var index = charIndex;\n    var j = 0;\n\n    for (var i = 0; i < charCount; i++) {\n      var charcode = s.charCodeAt(index);\n\n      if (charcode <= 0x7F) {\n        // 1 byte character 2^7\n        uint[j] = charcode;\n      } else if (charcode < 0x800) {\n        // 2 byte character 2^11\n        uint[j] = 0xc0 | charcode >> 6;\n        uint[++j] = 0x80 | charcode & 0x3f;\n      } else if (charcode < 0xd800 || charcode >= 0xe000) {\n        // 3 byte character 2^16        \n        uint[j] = 0xe0 | charcode >> 12;\n        uint[++j] = 0x80 | charcode >> 6 & 0x3f;\n        uint[++j] = 0x80 | charcode & 0x3f;\n      } else {\n        uint[j] = 0xef;\n        uint[++j] = 0xbf;\n        uint[++j] = 0xbd; // U+FFFE \"replacement character\"\n      }\n\n      ++j;\n      ++index;\n    }\n\n    return bytes;\n  };\n\n  Encoding.prototype.getBytesOfUnicodeEncoding = function (byteCount, s, charIndex, charCount) {\n    var bytes = new ArrayBuffer(byteCount);\n    var uint16 = new Uint16Array(bytes);\n\n    for (var i = 0; i < charCount; i++) {\n      var charcode = s.charCodeAt(i);\n      uint16[i] = charcode;\n    }\n\n    return bytes;\n  };\n\n  Encoding.prototype.getStringOfUtf8Encoding = function (byteCal, index, count) {\n    var j = 0;\n    var i = index;\n    var s = '';\n\n    for (j; j < count; j++) {\n      var c = byteCal[i++];\n\n      while (i > byteCal.length) {\n        return s;\n      }\n\n      if (c > 127) {\n        if (c > 191 && c < 224 && i < count) {\n          c = (c & 31) << 6 | byteCal[i] & 63;\n        } else if (c > 223 && c < 240 && i < byteCal.byteLength) {\n          c = (c & 15) << 12 | (byteCal[i] & 63) << 6 | byteCal[++i] & 63;\n        } else if (c > 239 && c < 248 && i < byteCal.byteLength) {\n          c = (c & 7) << 18 | (byteCal[i] & 63) << 12 | (byteCal[++i] & 63) << 6 | byteCal[++i] & 63;\n        }\n\n        ++i;\n      }\n\n      s += String.fromCharCode(c); // 1 byte(ASCII) character                          \n    }\n\n    return s;\n  };\n\n  Encoding.prototype.getStringofUnicodeEncoding = function (byteUni, index, count) {\n    if (count > byteUni.length) {\n      throw new RangeError('ArgumentOutOfRange_Count');\n    }\n\n    var byte16 = new Uint16Array(count);\n    var out = '';\n\n    for (var i = 0; i < count && i < byteUni.length; i++) {\n      byte16[i] = byteUni[index++];\n    }\n\n    out = String.fromCharCode.apply(null, byte16);\n    return out;\n  };\n  /**\n   * To clear the encoding instance\n   * @return {void}\n   */\n\n\n  Encoding.prototype.destroy = function () {\n    this.emitBOM = undefined;\n    this.encodingType = undefined;\n  };\n\n  return Encoding;\n}();\n/**\n * To check the object is null or undefined and throw error if it is null or undefined\n * @param {Object} value - object to check is null or undefined\n * @return {boolean}\n * @throws {ArgumentException} - if the value is null or undefined\n * @private\n */\n\n\nfunction validateNullOrUndefined(value, message) {\n  if (value === null || value === undefined) {\n    throw new Error('ArgumentException: ' + message + ' cannot be null or undefined');\n  }\n}\n/**\n * StreamWriter class contains the implementation for writing characters to a file in a particular encoding\n * ```typescript\n * let writer = new StreamWriter();\n * writer.write('Hello World');\n * writer.save('Sample.txt');\n * writer.dispose();\n * ```\n */\n\n\nvar StreamWriter =\n/** @__PURE__ @class */\nfunction () {\n  /**\n   * Initializes a new instance of the StreamWriter class by using the specified encoding.\n   * @param  {Encoding} encoding?- The character encoding to use.\n   */\n  function StreamWriter(encoding) {\n    this.bufferBlob = new Blob(['']);\n    this.bufferText = '';\n    this.init(encoding);\n    Save.isMicrosoftBrowser = !!navigator.msSaveBlob;\n  }\n\n  Object.defineProperty(StreamWriter.prototype, \"buffer\", {\n    /**\n     * Gets the content written to the StreamWriter as Blob.\n     * @returns Blob\n     */\n    get: function () {\n      this.flush();\n      return this.bufferBlob;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(StreamWriter.prototype, \"encoding\", {\n    /**\n     * Gets the encoding.\n     * @returns Encoding\n     */\n    get: function () {\n      return this.enc;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  StreamWriter.prototype.init = function (encoding) {\n    if (encoding === null || encoding === undefined) {\n      this.enc = new Encoding(false);\n      this.enc.type = 'Utf8';\n    } else {\n      this.enc = encoding;\n      this.setBomByte();\n    }\n  };\n  /**\n   * Private method to set Byte Order Mark(BOM) value based on EncodingType\n   */\n\n\n  StreamWriter.prototype.setBomByte = function () {\n    if (this.encoding.includeBom) {\n      switch (this.encoding.type) {\n        case 'Unicode':\n          var arrayUnicode = new ArrayBuffer(2);\n          var uint8 = new Uint8Array(arrayUnicode);\n          uint8[0] = 255;\n          uint8[1] = 254;\n          this.bufferBlob = new Blob([arrayUnicode]);\n          break;\n\n        case 'Utf8':\n          var arrayUtf8 = new ArrayBuffer(3);\n          var utf8 = new Uint8Array(arrayUtf8);\n          utf8[0] = 239;\n          utf8[1] = 187;\n          utf8[2] = 191;\n          this.bufferBlob = new Blob([arrayUtf8]);\n          break;\n\n        default:\n          this.bufferBlob = new Blob(['']);\n          break;\n      }\n    }\n  };\n  /**\n   * Saves the file with specified name and sends the file to client browser\n   * @param  {string} fileName - The file name to save\n   * @returns {void}\n   */\n\n\n  StreamWriter.prototype.save = function (fileName) {\n    if (this.bufferText !== '') {\n      this.flush();\n    }\n\n    Save.save(fileName, this.buffer);\n  };\n  /**\n   * Writes the specified string.\n   * @param  {string} value - The string to write. If value is null or undefined, nothing is written.\n   * @returns {void}\n   */\n\n\n  StreamWriter.prototype.write = function (value) {\n    if (this.encoding === undefined) {\n      throw new Error('Object Disposed Exception: current writer is disposed');\n    }\n\n    validateNullOrUndefined(value, 'string');\n    this.bufferText += value;\n\n    if (this.bufferText.length >= 10240) {\n      this.flush();\n    }\n  };\n\n  StreamWriter.prototype.flush = function () {\n    if (this.bufferText === undefined || this.bufferText === null || this.bufferText.length === 0) {\n      return;\n    }\n\n    var bufferArray = this.encoding.getBytes(this.bufferText, 0, this.bufferText.length);\n    this.bufferText = '';\n    this.bufferBlob = new Blob([this.bufferBlob, bufferArray]);\n  };\n  /**\n   * Writes the specified string followed by a line terminator\n   * @param  {string} value - The string to write. If value is null or undefined, nothing is written\n   * @returns {void}\n   */\n\n\n  StreamWriter.prototype.writeLine = function (value) {\n    if (this.encoding === undefined) {\n      throw new Error('Object Disposed Exception: current writer is disposed');\n    }\n\n    validateNullOrUndefined(value, 'string');\n    this.bufferText = this.bufferText + value + '\\r\\n';\n\n    if (this.bufferText.length >= 10240) {\n      this.flush();\n    }\n  };\n  /**\n   * Releases the resources used by the StreamWriter\n   * @returns {void}\n   */\n\n\n  StreamWriter.prototype.destroy = function () {\n    this.bufferBlob = undefined;\n    this.bufferText = undefined;\n\n    if (this.enc instanceof Encoding) {\n      this.enc.destroy();\n    }\n\n    this.enc = undefined;\n  };\n\n  return StreamWriter;\n}(); // export all modules from current location\n// example: export * from './module'\n\n/**\n * file utils modules\n */\n\n\nexport { XmlWriter, Namespace, XmlElement, XmlAttribute, StreamWriter, Encoding, validateNullOrUndefined, Save };","map":{"version":3,"names":["Save","save","fileName","buffer","undefined","Error","extension","substring","lastIndexOf","length","mimeType","getMimeType","Blob","type","isMicrosoftBrowser","navigator","msSaveBlob","downloadLink","document","createElementNS","saveInternal","hasDownloadAttribute","download","dataUrl_1","window","URL","createObjectURL","href","event_1","createEvent","initEvent","dispatchEvent","setTimeout","revokeObjectURL","url","isPopupBlocked","open","location","reader_1","FileReader","onloadend","result","readAsDataURL","XmlWriter","contentPos","bufferText","bufferBlob","currentState","namespaceStack","push","Namespace","set","elementStack","XmlElement","attributeStack","Object","defineProperty","prototype","get","flush","enumerable","configurable","writeProcessingInstruction","name","text","checkName","writeStartDocument","writeProcessingInstructionInternal","standalone","rawText","writeEndDocument","writeEndElement","writeStartElement","prefix","localName","namespace","startElementContent","lookupPrefix","lookupNamespace","writeStartElementInternal","top","writeEndElementInternal","splice","previousTop","writeElementString","value","writeString","writeAttributeString","writeStartAttribute","writeStringInternal","writeEndAttribute","writeInternal","writeRaw","isRawString","destroy","i","replace","writeStartAttributePrefixAndNameSpace","writeStartAttributeSpecialAttribute","skipPushAndWrite","pushNamespaceExplicit","pushNamespaceImplicit","writeStartAttributeInternal","namespaceName","writeNamespaceDeclaration","namespaceUri","writeStartNamespaceDeclaration","inAttributeValue","start","kind","addNamespace","ns","lookupNamespaceIndex","existingNsIndex","addAttribute","XmlAttribute","isDuplicate","format","test","Encoding","includeBom","emitBOM","encodingType","initBOM","getByteCount","chars","validateNullOrUndefined","byte","utf8Len","charCodeAt","getByteCountInternal","codePoint","bytes","isHighSurrogate","codeUnit","toCodepoint","highCodeUnit","lowCodeUnit","u","charIndex","charCount","byteCount","isUtf8","charCode","high","low","getBytes","s","RangeError","ArrayBuffer","getBytesOfUtf8Encoding","getBytesOfUnicodeEncoding","getBytesOfAnsiEncoding","getString","index","count","byteLength","out","byteCal","Uint8Array","getStringOfUtf8Encoding","byteUnicode","Uint16Array","getStringofUnicodeEncoding","j","c","String","fromCharCode","bufview","k","charcode","uint","uint16","byteUni","byte16","apply","message","StreamWriter","encoding","init","enc","setBomByte","arrayUnicode","uint8","arrayUtf8","utf8","write","bufferArray","writeLine"],"sources":["D:/Primary files/Hims UI/node_modules/@syncfusion/ej2-file-utils/dist/es6/ej2-file-utils.es5.js"],"sourcesContent":["/**\n * Save class provide method to save file\n * ```typescript\n * let blob : Blob = new Blob([''], { type: 'text/plain' });\n * Save.save('fileName.txt',blob);\n */\nvar Save = /** @__PURE__ @class */ (function () {\n    /**\n     * Initialize new instance of {save}\n     */\n    function Save() {\n        // tslint:disable\n    }\n    /**\n     * Saves the file with specified name and sends the file to client browser\n     * @param  {string} fileName- file name to save.\n     * @param  {Blob} buffer- the content to write in file\n     * @param  {boolean} isMicrosoftBrowser- specify whether microsoft browser or not\n     * @returns {void}\n     */\n    Save.save = function (fileName, buffer) {\n        if (fileName === null || fileName === undefined || fileName === '') {\n            throw new Error('ArgumentException: fileName cannot be undefined, null or empty');\n        }\n        var extension = fileName.substring(fileName.lastIndexOf('.') + 1, fileName.length);\n        var mimeType = this.getMimeType(extension);\n        if (mimeType !== '') {\n            buffer = new Blob([buffer], { type: mimeType });\n        }\n        if (this.isMicrosoftBrowser) {\n            navigator.msSaveBlob(buffer, fileName);\n        }\n        else {\n            var downloadLink = document.createElementNS('http://www.w3.org/1999/xhtml', 'a');\n            this.saveInternal(fileName, extension, buffer, downloadLink, 'download' in downloadLink);\n        }\n    };\n    Save.saveInternal = function (fileName, extension, buffer, downloadLink, hasDownloadAttribute) {\n        if (hasDownloadAttribute) {\n            downloadLink.download = fileName;\n            var dataUrl_1 = window.URL.createObjectURL(buffer);\n            downloadLink.href = dataUrl_1;\n            var event_1 = document.createEvent('MouseEvent');\n            event_1.initEvent('click', true, true);\n            downloadLink.dispatchEvent(event_1);\n            setTimeout(function () {\n                window.URL.revokeObjectURL(dataUrl_1);\n                dataUrl_1 = undefined;\n            });\n        }\n        else {\n            if (extension !== 'docx' && extension !== 'xlsx') {\n                var url = window.URL.createObjectURL(buffer);\n                var isPopupBlocked = window.open(url, '_blank');\n                if (!isPopupBlocked) {\n                    window.location.href = url;\n                }\n            }\n            else {\n                var reader_1 = new FileReader();\n                reader_1.onloadend = function () {\n                    var isPopupBlocked = window.open(reader_1.result, '_blank');\n                    if (!isPopupBlocked) {\n                        window.location.href = reader_1.result;\n                    }\n                };\n                reader_1.readAsDataURL(buffer);\n            }\n        }\n    };\n    /**\n     *\n     * @param {string} extension - get mime type of the specified extension\n     * @private\n     */\n    Save.getMimeType = function (extension) {\n        var mimeType = '';\n        switch (extension) {\n            case 'html':\n                mimeType = 'text/html';\n                break;\n            case 'pdf':\n                mimeType = 'application/pdf';\n                break;\n            case 'docx':\n                mimeType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';\n                break;\n            case 'xlsx':\n                mimeType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\n                break;\n            case 'txt':\n                mimeType = 'text/plain';\n                break;\n        }\n        return mimeType;\n    };\n    return Save;\n}());\n\n/**\n * XmlWriter class provide method to create XML data\n */\nvar XmlWriter = /** @__PURE__ @class */ (function () {\n    /**\n     * Initialize new instance of {XmlWriter}\n     */\n    function XmlWriter() {\n        this.contentPos = 0;\n        this.bufferText = '';\n        this.bufferBlob = new Blob([''], { type: 'text/plain' });\n        this.currentState = 'Initial';\n        this.namespaceStack = [];\n        this.namespaceStack.push(new Namespace());\n        this.namespaceStack[0].set('xmlns', 'http://www.w3.org/2000/xmlns/', 'Special');\n        this.namespaceStack.push(new Namespace());\n        this.namespaceStack[1].set('xml', 'http://www.w3.org/XML/1998/namespace', 'Special');\n        this.namespaceStack.push(new Namespace());\n        this.namespaceStack[2].set('', '', 'Implied');\n        this.elementStack = [];\n        this.elementStack.push(new XmlElement());\n        this.elementStack[0].set('', '', '', this.namespaceStack.length - 1);\n        this.attributeStack = [];\n        Save.isMicrosoftBrowser = !(!navigator.msSaveBlob);\n    }\n    Object.defineProperty(XmlWriter.prototype, \"buffer\", {\n        /**\n         * Gets the content written to the {XmlWriter} as Blob.\n         * @returns {Blob}\n         */\n        get: function () {\n            this.flush();\n            return this.bufferBlob;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes processing instruction with a space between the name and text\n     * @param {string} name - name of the processing instruction\n     * @param {string} text - text to write in the processing instruction\n     * @throws ArgumentException\n     * @throws InvalidArgumentException\n     * @throws InvalidOperationException\n     */\n    XmlWriter.prototype.writeProcessingInstruction = function (name, text) {\n        if (name === undefined || name === null || name.length === 0) {\n            throw new Error('ArgumentException: name should not be undefined, null or empty');\n        }\n        this.checkName(name);\n        if (text === undefined || text === null) {\n            text = '';\n        }\n        if (name.length === 3 && name === 'xml') {\n            if (this.currentState !== 'Initial') {\n                // tslint:disable-next-line:max-line-length\n                throw new Error('InvalidArgumentException: Cannot write XML declaration.WriteStartDocument method has already written it');\n            }\n        }\n        if (this.currentState !== 'Initial' || this.bufferBlob === undefined) {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        else {\n            this.writeStartDocument();\n            this.writeProcessingInstructionInternal(name, text);\n        }\n    };\n    /**\n     * Writes Xml declaration with version and standalone attribute\n     * @param {boolean} standalone - if true it write standalone=yes else standalone=no\n     * @throws InvalidOperation\n     */\n    XmlWriter.prototype.writeStartDocument = function (standalone) {\n        if (this.currentState !== 'Initial' || this.bufferBlob === undefined) {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        this.currentState = 'StartDocument';\n        this.rawText('<?xml version=\"1.0\" encoding=\"utf-8');\n        if (standalone !== null && standalone !== undefined) {\n            this.rawText('\" standalone=\"');\n            this.rawText(standalone ? 'yes' : 'no');\n        }\n        this.rawText('\"?>');\n    };\n    /**\n     * Closes any open tag or attribute and write the state back to start\n     */\n    XmlWriter.prototype.writeEndDocument = function () {\n        while (this.elementStack.length - 1 > 0) {\n            this.writeEndElement();\n        }\n        this.currentState = 'EndDocument';\n        this.flush();\n    };\n    /**\n     * Writes the specified start tag and associates it with the given namespace and prefix.\n     * @param {string} prefix - namespace prefix of element\n     * @param {string} localName -localName of element\n     * @param {string} namespace - namespace URI associate with element\n     * @throws ArgumentException\n     * @throws InvalidOperationException\n     */\n    XmlWriter.prototype.writeStartElement = function (prefix, localName, namespace) {\n        if (this.bufferBlob === undefined) {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        if (localName === undefined || localName === null || localName.length === 0) {\n            throw new Error('ArgumentException: localName cannot be undefined, null or empty');\n        }\n        this.checkName(localName);\n        if (this.currentState === 'Initial') {\n            this.writeStartDocument();\n        }\n        if (this.currentState === 'StartElement') {\n            this.startElementContent();\n        }\n        this.currentState = 'StartElement';\n        if (prefix === undefined || prefix === null) {\n            if (namespace !== undefined && namespace !== null) {\n                prefix = this.lookupPrefix(namespace);\n            }\n            if (prefix === undefined || prefix === null) {\n                prefix = '';\n            }\n        }\n        else if (prefix.length > 0) {\n            if (namespace === undefined || namespace === null) {\n                namespace = this.lookupNamespace(prefix);\n            }\n            if (namespace === undefined || namespace === null || (namespace !== undefined && namespace.length === 0)) {\n                throw new Error('ArgumentException: Cannot use a prefix with an empty namespace');\n            }\n        }\n        if (namespace === undefined || namespace === null) {\n            namespace = this.lookupNamespace(prefix);\n        }\n        this.writeStartElementInternal(prefix, localName, namespace);\n    };\n    /**\n     * Closes one element and pop corresponding namespace scope\n     */\n    XmlWriter.prototype.writeEndElement = function () {\n        if (this.currentState === 'StartElement') {\n            this.startElementContent();\n            this.currentState = 'ElementContent';\n        }\n        else if (this.currentState === 'ElementContent') {\n            this.currentState = 'ElementContent';\n        }\n        this.currentState = 'EndElement';\n        var top = this.elementStack.length - 1;\n        this.writeEndElementInternal(this.elementStack[top].prefix, this.elementStack[top].localName);\n        this.namespaceStack.splice(this.elementStack[top].previousTop + 1);\n        this.elementStack.splice(top);\n        if (this.bufferText.length > 10240) {\n            this.flush();\n        }\n    };\n    /**\n     * Writes an element with the specified prefix, local name, namespace URI, and value.\n     * @param {string} prefix - namespace prefix of element\n     * @param {string} localName - localName of element\n     * @param {string} namespace - namespace URI associate with element\n     * @param {string} value - value of element\n     */\n    XmlWriter.prototype.writeElementString = function (prefix, localName, namespace, value) {\n        this.writeStartElement(prefix, localName, namespace);\n        if (value !== undefined && value !== null && value.length !== 0) {\n            this.writeString(value);\n        }\n        this.writeEndElement();\n    };\n    /**\n     * Writes out the attribute with the specified prefix, local name, namespace URI, and value\n     * @param {string} prefix - namespace prefix of element\n     * @param {string} localName - localName of element\n     * @param {string} namespace - namespace URI associate with element\n     * @param {string} value - value of element\n     */\n    XmlWriter.prototype.writeAttributeString = function (prefix, localName, namespace, value) {\n        this.writeStartAttribute(prefix, localName, namespace, value);\n        this.writeStringInternal(value, true);\n        this.writeEndAttribute();\n    };\n    /**\n     * Writes the given text content\n     * @param {string} text - text to write\n     * @throws InvalidOperationException\n     */\n    XmlWriter.prototype.writeString = function (text) {\n        this.writeInternal(text, false);\n    };\n    /**\n     * Write given text as raw data\n     * @param {string} text - text to write\n     * @throws InvalidOperationException\n     */\n    XmlWriter.prototype.writeRaw = function (text) {\n        this.writeInternal(text, true);\n    };\n    XmlWriter.prototype.writeInternal = function (text, isRawString) {\n        if (text === undefined || text === null) {\n            return;\n        }\n        else {\n            if (this.currentState !== 'StartElement' && this.currentState !== 'ElementContent') {\n                throw new Error('InvalidOperationException: Wrong Token');\n            }\n            if (this.currentState === 'StartElement') {\n                this.startElementContent();\n            }\n            this.currentState = 'ElementContent';\n            if (isRawString) {\n                this.rawText(text);\n            }\n            else {\n                this.writeStringInternal(text, false);\n            }\n        }\n    };\n    /**\n     * Saves the file with specified name and sends the file to client browser\n     * @param {string} fileName - file name\n     */\n    XmlWriter.prototype.save = function (fileName) {\n        while (this.elementStack.length - 1 > 0) {\n            this.writeEndElement();\n        }\n        if (this.bufferText !== '') {\n            this.flush();\n        }\n        Save.save(fileName, this.buffer);\n    };\n    /**\n     * Releases the resources used by XmlWriter.\n     */\n    XmlWriter.prototype.destroy = function () {\n        this.bufferBlob = undefined;\n        for (var i = 0; i < this.namespaceStack.length; i++) {\n            this.namespaceStack[i].destroy();\n        }\n        this.namespaceStack = [];\n        for (var i = 0; i < this.elementStack.length; i++) {\n            this.elementStack[i].destroy();\n        }\n        this.elementStack = [];\n        this.bufferText = '';\n        this.contentPos = 0;\n    };\n    XmlWriter.prototype.flush = function () {\n        if (this.bufferBlob === undefined) {\n            return;\n        }\n        this.bufferBlob = new Blob([this.bufferBlob, this.bufferText], { type: 'text/plain' });\n        this.bufferText = '';\n    };\n    XmlWriter.prototype.writeProcessingInstructionInternal = function (name, text) {\n        this.bufferText += '<?';\n        this.rawText(name);\n        if (text.length > 0) {\n            this.bufferText += ' ';\n            text = text.replace(/\\?\\>/g, '? >');\n            this.bufferText += text;\n        }\n        this.bufferText += '?';\n        this.bufferText += '>';\n    };\n    XmlWriter.prototype.writeStartAttribute = function (prefix, localName, namespace, value) {\n        if (localName === undefined || localName === null || localName.length === 0) {\n            if (prefix === 'xmlns') {\n                localName = 'xmlns';\n                prefix = '';\n            }\n            else {\n                throw new Error('ArgumentException: localName cannot be undefined, null or empty');\n            }\n        }\n        if (this.currentState !== 'StartElement') {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        this.checkName(localName);\n        this.writeStartAttributePrefixAndNameSpace(prefix, localName, namespace, value);\n    };\n    XmlWriter.prototype.writeStartAttributePrefixAndNameSpace = function (prefix, localName, namespace, value) {\n        if (prefix === undefined || prefix === null) {\n            if (namespace !== undefined && namespace !== null) {\n                if (!(localName === 'xmlns' && namespace === 'http://www.w3.org/2000/xmlns/')) {\n                    prefix = this.lookupPrefix(namespace);\n                }\n            }\n            if (prefix === undefined || prefix === null) {\n                prefix = '';\n            }\n        }\n        if (namespace === undefined || namespace === null) {\n            if (prefix !== undefined && prefix !== null && prefix.length > 0) {\n                namespace = this.lookupNamespace(prefix);\n            }\n            if (namespace === undefined || namespace === null) {\n                namespace = '';\n            }\n        }\n        this.writeStartAttributeSpecialAttribute(prefix, localName, namespace, value);\n    };\n    XmlWriter.prototype.writeStartAttributeSpecialAttribute = function (prefix, localName, namespace, value) {\n        if (prefix.length === 0) {\n            if (localName[0] === 'x' && localName === 'xmlns') {\n                this.skipPushAndWrite(prefix, localName, namespace);\n                this.pushNamespaceExplicit('', value);\n                return;\n            }\n            else if (namespace.length > 0) {\n                prefix = this.lookupPrefix(namespace);\n            }\n        }\n        else {\n            if (prefix[0] === 'x') {\n                if (prefix === 'xmlns') {\n                    this.skipPushAndWrite(prefix, localName, namespace);\n                    this.pushNamespaceExplicit(localName, value);\n                    return;\n                }\n                else if (prefix === 'xml') {\n                    if (localName === 'space' || localName === 'lang') {\n                        this.skipPushAndWrite(prefix, localName, namespace);\n                        return;\n                    }\n                }\n            }\n            if (namespace.length === 0) {\n                prefix = '';\n            }\n        }\n        if (prefix !== undefined && prefix !== null && prefix.length !== 0) {\n            this.pushNamespaceImplicit(prefix, namespace);\n        }\n        this.skipPushAndWrite(prefix, localName, namespace);\n    };\n    XmlWriter.prototype.writeEndAttribute = function () {\n        this.currentState = 'StartElement';\n        this.bufferText += '\"';\n    };\n    XmlWriter.prototype.writeStartElementInternal = function (prefix, localName, namespace) {\n        this.bufferText += '<';\n        if (prefix.length > 0) {\n            this.rawText(prefix);\n            this.bufferText += ':';\n        }\n        this.rawText(localName);\n        var top = this.elementStack.length;\n        this.elementStack.push(new XmlElement());\n        this.elementStack[top].set(prefix, localName, namespace, this.namespaceStack.length - 1);\n        this.pushNamespaceImplicit(prefix, namespace);\n        for (var i = 0; i < this.attributeStack.length; i++) {\n            this.attributeStack[i].destroy();\n        }\n        this.attributeStack = [];\n    };\n    XmlWriter.prototype.writeEndElementInternal = function (prefix, localName) {\n        if (this.contentPos !== this.bufferText.length + 1) {\n            this.bufferText += '</';\n            if (prefix !== undefined && prefix !== null && prefix.length !== 0) {\n                this.rawText(prefix);\n                this.bufferText += ':';\n            }\n            this.rawText(localName);\n            this.bufferText += '>';\n        }\n        else {\n            this.bufferText = this.bufferText.substring(0, this.bufferText.length - 1);\n            this.bufferText += ' />';\n        }\n    };\n    XmlWriter.prototype.writeStartAttributeInternal = function (prefix, localName, namespaceName) {\n        this.bufferText += ' ';\n        if (prefix !== undefined && prefix !== null && prefix.length > 0) {\n            this.rawText(prefix);\n            this.bufferText += ':';\n        }\n        this.rawText(localName);\n        this.bufferText += '=';\n        this.bufferText += '\"';\n    };\n    XmlWriter.prototype.writeNamespaceDeclaration = function (prefix, namespaceUri) {\n        this.writeStartNamespaceDeclaration(prefix);\n        this.writeStringInternal(namespaceUri, true);\n        this.bufferText += '\"';\n    };\n    XmlWriter.prototype.writeStartNamespaceDeclaration = function (prefix) {\n        if (prefix === undefined || prefix === null || prefix.length === 0) {\n            this.rawText(' xmlns=\\\"');\n        }\n        else {\n            this.rawText(' xmlns:');\n            this.rawText(prefix);\n            this.bufferText += '=';\n            this.bufferText += '\"';\n        }\n    };\n    XmlWriter.prototype.writeStringInternal = function (text, inAttributeValue) {\n        if (text === null || text === undefined) {\n            text = '';\n        }\n        text = text.replace(/\\&/g, '&amp;');\n        text = text.replace(/\\</g, '&lt;');\n        text = text.replace(/\\>/g, '&gt;');\n        if (inAttributeValue) {\n            text = text.replace(/\\\"/g, '&quot;');\n        }\n        this.bufferText += text;\n        if (!inAttributeValue) {\n            this.contentPos = 0;\n        }\n    };\n    XmlWriter.prototype.startElementContent = function () {\n        var start = this.elementStack[this.elementStack.length - 1].previousTop;\n        for (var i = this.namespaceStack.length - 1; i > start; i--) {\n            if (this.namespaceStack[i].kind === 'NeedToWrite') {\n                this.writeNamespaceDeclaration(this.namespaceStack[i].prefix, this.namespaceStack[i].namespaceUri);\n            }\n        }\n        this.bufferText += '>';\n        this.contentPos = this.bufferText.length + 1;\n    };\n    XmlWriter.prototype.rawText = function (text) {\n        this.bufferText += text;\n    };\n    XmlWriter.prototype.addNamespace = function (prefix, ns, kind) {\n        var top = this.namespaceStack.length;\n        this.namespaceStack.push(new Namespace());\n        this.namespaceStack[top].set(prefix, ns, kind);\n    };\n    XmlWriter.prototype.lookupPrefix = function (namespace) {\n        for (var i = this.namespaceStack.length - 1; i >= 0; i--) {\n            if (this.namespaceStack[i].namespaceUri === namespace) {\n                return this.namespaceStack[i].prefix;\n            }\n        }\n        return undefined;\n    };\n    XmlWriter.prototype.lookupNamespace = function (prefix) {\n        for (var i = this.namespaceStack.length - 1; i >= 0; i--) {\n            if (this.namespaceStack[i].prefix === prefix) {\n                return this.namespaceStack[i].namespaceUri;\n            }\n        }\n        return undefined;\n    };\n    XmlWriter.prototype.lookupNamespaceIndex = function (prefix) {\n        for (var i = this.namespaceStack.length - 1; i >= 0; i--) {\n            if (this.namespaceStack[i].prefix === prefix) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    XmlWriter.prototype.pushNamespaceImplicit = function (prefix, ns) {\n        var kind;\n        var existingNsIndex = this.lookupNamespaceIndex(prefix);\n        if (existingNsIndex !== -1) {\n            if (existingNsIndex > this.elementStack[this.elementStack.length - 1].previousTop) {\n                if (this.namespaceStack[existingNsIndex].namespaceUri !== ns) {\n                    throw new Error('XmlException namespace Uri needs to be the same as the one that is already declared');\n                }\n                return;\n            }\n            else {\n                if (this.namespaceStack[existingNsIndex].kind === 'Special') {\n                    if (prefix === 'xml') {\n                        if (ns !== this.namespaceStack[existingNsIndex].namespaceUri) {\n                            throw new Error('InvalidArgumentException: Xml String');\n                        }\n                        else {\n                            kind = 'Implied';\n                        }\n                    }\n                    else {\n                        throw new Error('InvalidArgumentException: Prefix \"xmlns\" is reserved for use by XML.');\n                    }\n                }\n                else {\n                    kind = (this.namespaceStack[existingNsIndex].namespaceUri === ns) ? 'Implied' : 'NeedToWrite';\n                }\n            }\n        }\n        else {\n            if ((ns === 'http://www.w3.org/XML/1998/namespace' && prefix !== 'xml') ||\n                (ns === 'http://www.w3.org/2000/xmlns/' && prefix !== 'xmlns')) {\n                throw new Error('InvalidArgumentException');\n            }\n            kind = 'NeedToWrite';\n        }\n        this.addNamespace(prefix, ns, kind);\n    };\n    XmlWriter.prototype.pushNamespaceExplicit = function (prefix, ns) {\n        var existingNsIndex = this.lookupNamespaceIndex(prefix);\n        if (existingNsIndex !== -1) {\n            if (existingNsIndex > this.elementStack[this.elementStack.length - 1].previousTop) {\n                this.namespaceStack[existingNsIndex].kind = 'Written';\n                return;\n            }\n        }\n        this.addNamespace(prefix, ns, 'Written');\n        return;\n    };\n    XmlWriter.prototype.addAttribute = function (prefix, localName, namespaceName) {\n        var top = this.attributeStack.length;\n        this.attributeStack.push(new XmlAttribute());\n        this.attributeStack[top].set(prefix, localName, namespaceName);\n        for (var i = 0; i < top; i++) {\n            if (this.attributeStack[i].isDuplicate(prefix, localName, namespaceName)) {\n                throw new Error('XmlException: duplicate attribute name');\n            }\n        }\n    };\n    XmlWriter.prototype.skipPushAndWrite = function (prefix, localName, namespace) {\n        this.addAttribute(prefix, localName, namespace);\n        this.writeStartAttributeInternal(prefix, localName, namespace);\n    };\n    XmlWriter.prototype.checkName = function (text) {\n        var format = /[ !@#$%^&*()+\\=\\[\\]{};':\"\\\\|,<>\\/?]/;\n        if (format.test(text)) {\n            throw new Error('InvalidArgumentException: invalid name character');\n        }\n    };\n    return XmlWriter;\n}());\n/**\n * class for managing namespace collection\n */\nvar Namespace = /** @__PURE__ @class */ (function () {\n    function Namespace() {\n    }\n    /**\n     * set value for current namespace instance\n     * @param {string} prefix namespace's prefix\n     * @param {string} namespaceUri namespace URI\n     * @param {string} kind namespace kind\n     */\n    Namespace.prototype.set = function (prefix, namespaceUri, kind) {\n        this.prefix = prefix;\n        this.namespaceUri = namespaceUri;\n        this.kind = kind;\n    };\n    /**\n     * Releases the resources used by Namespace\n     */\n    Namespace.prototype.destroy = function () {\n        this.prefix = undefined;\n        this.namespaceUri = undefined;\n        this.kind = undefined;\n    };\n    return Namespace;\n}());\n/**\n * class for managing element collection\n */\nvar XmlElement = /** @__PURE__ @class */ (function () {\n    function XmlElement() {\n    }\n    /**\n     * set value of current element\n     * @param {string} prefix - element prefix\n     * @param {string} localName - element local name\n     * @param {string} namespaceUri -namespace URI\n     * @param {string} previousTop - previous namespace top\n     */\n    XmlElement.prototype.set = function (prefix, localName, namespaceUri, previousTop) {\n        this.previousTop = previousTop;\n        this.prefix = prefix;\n        this.namespaceUri = namespaceUri;\n        this.localName = localName;\n    };\n    /**\n     * Releases the resources used by XmlElement\n     */\n    XmlElement.prototype.destroy = function () {\n        this.previousTop = undefined;\n        this.prefix = undefined;\n        this.localName = undefined;\n        this.namespaceUri = undefined;\n    };\n    return XmlElement;\n}());\n/**\n * class for managing attribute collection\n */\nvar XmlAttribute = /** @__PURE__ @class */ (function () {\n    function XmlAttribute() {\n    }\n    /**\n     * set value of current attribute\n     * @param {string} prefix - namespace's prefix\n     * @param {string} namespaceUri - namespace URI\n     * @param {string} localName - attribute localName\n     */\n    XmlAttribute.prototype.set = function (prefix, localName, namespaceUri) {\n        this.prefix = prefix;\n        this.namespaceUri = namespaceUri;\n        this.localName = localName;\n    };\n    /**\n     * get whether the attribute is duplicate or not\n     * @param {string} prefix - namespace's prefix\n     * @param {string} namespaceUri - namespace URI\n     * @param {string} localName - attribute localName\n     */\n    XmlAttribute.prototype.isDuplicate = function (prefix, localName, namespaceUri) {\n        return ((this.localName === localName) && ((this.prefix === prefix) || (this.namespaceUri === namespaceUri)));\n    };\n    /**\n     * Releases the resources used by XmlAttribute\n     */\n    XmlAttribute.prototype.destroy = function () {\n        this.prefix = undefined;\n        this.namespaceUri = undefined;\n        this.localName = undefined;\n    };\n    return XmlAttribute;\n}());\n\n/**\n * Encoding class: Contains the details about encoding type, whether to write a Unicode byte order mark (BOM).\n * ```typescript\n * let encoding : Encoding = new Encoding();\n * encoding.type = 'Utf8';\n * encoding.getBytes('Encoding', 0, 5);\n * ```\n */\nvar Encoding = /** @__PURE__ @class */ (function () {\n    /**\n     * Initializes a new instance of the Encoding class. A parameter specifies whether to write a Unicode byte order mark\n     * @param  {boolean} includeBom?-true to specify that a Unicode byte order mark is written; otherwise, false.\n     */\n    function Encoding(includeBom) {\n        this.emitBOM = true;\n        this.encodingType = 'Ansi';\n        this.initBOM(includeBom);\n    }\n    Object.defineProperty(Encoding.prototype, \"includeBom\", {\n        /**\n         * Gets a value indicating whether to write a Unicode byte order mark\n         * @returns boolean- true to specify that a Unicode byte order mark is written; otherwise, false\n         */\n        get: function () {\n            return this.emitBOM;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Encoding.prototype, \"type\", {\n        /**\n         * Gets the encoding type.\n         * @returns EncodingType\n         */\n        get: function () {\n            return this.encodingType;\n        },\n        /**\n         * Sets the encoding type.\n         * @param  {EncodingType} value\n         */\n        set: function (value) {\n            this.encodingType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Initialize the includeBom to emit BOM or Not\n     * @param  {boolean} includeBom\n     */\n    Encoding.prototype.initBOM = function (includeBom) {\n        if (includeBom === undefined || includeBom === null) {\n            this.emitBOM = true;\n        }\n        else {\n            this.emitBOM = includeBom;\n        }\n    };\n    /**\n     * Calculates the number of bytes produced by encoding the characters in the specified string\n     * @param  {string} chars - The string containing the set of characters to encode\n     * @returns {number} - The number of bytes produced by encoding the specified characters\n     */\n    Encoding.prototype.getByteCount = function (chars) {\n        validateNullOrUndefined(chars, 'string');\n        if (chars === '') {\n            var byte = this.utf8Len(chars.charCodeAt(0));\n            return byte;\n        }\n        if (this.type === null || this.type === undefined) {\n            this.type = 'Ansi';\n        }\n        return this.getByteCountInternal(chars, 0, chars.length);\n    };\n    /**\n     * Return the Byte of character\n     * @param  {number} codePoint\n     * @returns {number}\n     */\n    Encoding.prototype.utf8Len = function (codePoint) {\n        var bytes = codePoint <= 0x7F ? 1 :\n            codePoint <= 0x7FF ? 2 :\n                codePoint <= 0xFFFF ? 3 :\n                    codePoint <= 0x1FFFFF ? 4 : 0;\n        return bytes;\n    };\n    /**\n     * for 4 byte character return surrogate pair true, otherwise false\n     * @param  {number} codeUnit\n     * @returns {boolean}\n     */\n    Encoding.prototype.isHighSurrogate = function (codeUnit) {\n        return codeUnit >= 0xD800 && codeUnit <= 0xDBFF;\n    };\n    /**\n     * for 4byte character generate the surrogate pair\n     * @param  {number} highCodeUnit\n     * @param  {number} lowCodeUnit\n     */\n    Encoding.prototype.toCodepoint = function (highCodeUnit, lowCodeUnit) {\n        highCodeUnit = (0x3FF & highCodeUnit) << 10;\n        var u = highCodeUnit | (0x3FF & lowCodeUnit);\n        return u + 0x10000;\n    };\n    /**\n     * private method to get the byte count for specific charindex and count\n     * @param  {string} chars\n     * @param  {number} charIndex\n     * @param  {number} charCount\n     */\n    Encoding.prototype.getByteCountInternal = function (chars, charIndex, charCount) {\n        var byteCount = 0;\n        if (this.encodingType === 'Utf8' || this.encodingType === 'Unicode') {\n            var isUtf8 = this.encodingType === 'Utf8';\n            for (var i = 0; i < charCount; i++) {\n                var charCode = chars.charCodeAt(isUtf8 ? charIndex : charIndex++);\n                if (this.isHighSurrogate(charCode)) {\n                    if (isUtf8) {\n                        var high = charCode;\n                        var low = chars.charCodeAt(++charIndex);\n                        byteCount += this.utf8Len(this.toCodepoint(high, low));\n                    }\n                    else {\n                        byteCount += 4;\n                        ++i;\n                    }\n                }\n                else {\n                    if (isUtf8) {\n                        byteCount += this.utf8Len(charCode);\n                    }\n                    else {\n                        byteCount += 2;\n                    }\n                }\n                if (isUtf8) {\n                    charIndex++;\n                }\n            }\n            return byteCount;\n        }\n        else {\n            byteCount = charCount;\n            return byteCount;\n        }\n    };\n    /**\n     * Encodes a set of characters from the specified string into the ArrayBuffer.\n     * @param  {string} s- The string containing the set of characters to encode\n     * @param  {number} charIndex-The index of the first character to encode.\n     * @param  {number} charCount- The number of characters to encode.\n     * @returns {ArrayBuffer} - The ArrayBuffer that contains the resulting sequence of bytes.\n     */\n    Encoding.prototype.getBytes = function (s, charIndex, charCount) {\n        validateNullOrUndefined(s, 'string');\n        validateNullOrUndefined(charIndex, 'charIndex');\n        validateNullOrUndefined(charCount, 'charCount');\n        if (charIndex < 0 || charCount < 0) {\n            throw new RangeError('Argument Out Of Range Exception: charIndex or charCount is less than zero');\n        }\n        if (s.length - charIndex < charCount) {\n            throw new RangeError('Argument Out Of Range Exception: charIndex and charCount do not denote a valid range in string');\n        }\n        var bytes;\n        if (s === '') {\n            bytes = new ArrayBuffer(0);\n            return bytes;\n        }\n        if (this.type === null || this.type === undefined) {\n            this.type = 'Ansi';\n        }\n        var byteCount = this.getByteCountInternal(s, charIndex, charCount);\n        switch (this.type) {\n            case 'Utf8':\n                bytes = this.getBytesOfUtf8Encoding(byteCount, s, charIndex, charCount);\n                return bytes;\n            case 'Unicode':\n                bytes = this.getBytesOfUnicodeEncoding(byteCount, s, charIndex, charCount);\n                return bytes;\n            default:\n                bytes = this.getBytesOfAnsiEncoding(byteCount, s, charIndex, charCount);\n                return bytes;\n        }\n    };\n    /**\n     * Decodes a sequence of bytes from the specified ArrayBuffer into the string.\n     * @param  {ArrayBuffer} bytes- The ArrayBuffer containing the sequence of bytes to decode.\n     * @param  {number} index- The index of the first byte to decode.\n     * @param  {number} count- The number of bytes to decode.\n     * @returns {string} - The string that contains the resulting set of characters.\n     */\n    Encoding.prototype.getString = function (bytes, index, count) {\n        validateNullOrUndefined(bytes, 'bytes');\n        validateNullOrUndefined(index, 'index');\n        validateNullOrUndefined(count, 'count');\n        if (index < 0 || count < 0) {\n            throw new RangeError('Argument Out Of Range Exception: index or count is less than zero');\n        }\n        if (bytes.byteLength - index < count) {\n            throw new RangeError('Argument Out Of Range Exception: index and count do not denote a valid range in bytes');\n        }\n        if (bytes.byteLength === 0 || count === 0) {\n            return '';\n        }\n        if (this.type === null || this.type === undefined) {\n            this.type = 'Ansi';\n        }\n        var out = '';\n        var byteCal = new Uint8Array(bytes);\n        switch (this.type) {\n            case 'Utf8':\n                var s = this.getStringOfUtf8Encoding(byteCal, index, count);\n                return s;\n            case 'Unicode':\n                var byteUnicode = new Uint16Array(bytes);\n                out = this.getStringofUnicodeEncoding(byteUnicode, index, count);\n                return out;\n            default:\n                var j = index;\n                for (var i = 0; i < count; i++) {\n                    var c = byteCal[j];\n                    out += String.fromCharCode(c); // 1 byte(ASCII) character                  \n                    j++;\n                }\n                return out;\n        }\n    };\n    Encoding.prototype.getBytesOfAnsiEncoding = function (byteCount, s, charIndex, charCount) {\n        var bytes = new ArrayBuffer(byteCount);\n        var bufview = new Uint8Array(bytes);\n        var k = 0;\n        for (var i = 0; i < charCount; i++) {\n            var charcode = s.charCodeAt(charIndex++);\n            if (charcode < 0x800) {\n                bufview[k] = charcode;\n            }\n            else {\n                bufview[k] = 63; //replacement character '?'\n            }\n            k++;\n        }\n        return bytes;\n    };\n    Encoding.prototype.getBytesOfUtf8Encoding = function (byteCount, s, charIndex, charCount) {\n        var bytes = new ArrayBuffer(byteCount);\n        var uint = new Uint8Array(bytes);\n        var index = charIndex;\n        var j = 0;\n        for (var i = 0; i < charCount; i++) {\n            var charcode = s.charCodeAt(index);\n            if (charcode <= 0x7F) { // 1 byte character 2^7\n                uint[j] = charcode;\n            }\n            else if (charcode < 0x800) { // 2 byte character 2^11\n                uint[j] = 0xc0 | (charcode >> 6);\n                uint[++j] = 0x80 | (charcode & 0x3f);\n            }\n            else if ((charcode < 0xd800 || charcode >= 0xe000)) { // 3 byte character 2^16        \n                uint[j] = 0xe0 | (charcode >> 12);\n                uint[++j] = 0x80 | ((charcode >> 6) & 0x3f);\n                uint[++j] = 0x80 | (charcode & 0x3f);\n            }\n            else {\n                uint[j] = 0xef;\n                uint[++j] = 0xbf;\n                uint[++j] = 0xbd; // U+FFFE \"replacement character\"\n            }\n            ++j;\n            ++index;\n        }\n        return bytes;\n    };\n    Encoding.prototype.getBytesOfUnicodeEncoding = function (byteCount, s, charIndex, charCount) {\n        var bytes = new ArrayBuffer(byteCount);\n        var uint16 = new Uint16Array(bytes);\n        for (var i = 0; i < charCount; i++) {\n            var charcode = s.charCodeAt(i);\n            uint16[i] = charcode;\n        }\n        return bytes;\n    };\n    Encoding.prototype.getStringOfUtf8Encoding = function (byteCal, index, count) {\n        var j = 0;\n        var i = index;\n        var s = '';\n        for (j; j < count; j++) {\n            var c = byteCal[i++];\n            while (i > byteCal.length) {\n                return s;\n            }\n            if (c > 127) {\n                if (c > 191 && c < 224 && i < count) {\n                    c = (c & 31) << 6 | byteCal[i] & 63;\n                }\n                else if (c > 223 && c < 240 && i < byteCal.byteLength) {\n                    c = (c & 15) << 12 | (byteCal[i] & 63) << 6 | byteCal[++i] & 63;\n                }\n                else if (c > 239 && c < 248 && i < byteCal.byteLength) {\n                    c = (c & 7) << 18 | (byteCal[i] & 63) << 12 | (byteCal[++i] & 63) << 6 | byteCal[++i] & 63;\n                }\n                ++i;\n            }\n            s += String.fromCharCode(c); // 1 byte(ASCII) character                          \n        }\n        return s;\n    };\n    Encoding.prototype.getStringofUnicodeEncoding = function (byteUni, index, count) {\n        if (count > byteUni.length) {\n            throw new RangeError('ArgumentOutOfRange_Count');\n        }\n        var byte16 = new Uint16Array(count);\n        var out = '';\n        for (var i = 0; i < count && i < byteUni.length; i++) {\n            byte16[i] = byteUni[index++];\n        }\n        out = String.fromCharCode.apply(null, byte16);\n        return out;\n    };\n    /**\n     * To clear the encoding instance\n     * @return {void}\n     */\n    Encoding.prototype.destroy = function () {\n        this.emitBOM = undefined;\n        this.encodingType = undefined;\n    };\n    return Encoding;\n}());\n/**\n * To check the object is null or undefined and throw error if it is null or undefined\n * @param {Object} value - object to check is null or undefined\n * @return {boolean}\n * @throws {ArgumentException} - if the value is null or undefined\n * @private\n */\nfunction validateNullOrUndefined(value, message) {\n    if (value === null || value === undefined) {\n        throw new Error('ArgumentException: ' + message + ' cannot be null or undefined');\n    }\n}\n\n/**\n * StreamWriter class contains the implementation for writing characters to a file in a particular encoding\n * ```typescript\n * let writer = new StreamWriter();\n * writer.write('Hello World');\n * writer.save('Sample.txt');\n * writer.dispose();\n * ```\n */\nvar StreamWriter = /** @__PURE__ @class */ (function () {\n    /**\n     * Initializes a new instance of the StreamWriter class by using the specified encoding.\n     * @param  {Encoding} encoding?- The character encoding to use.\n     */\n    function StreamWriter(encoding) {\n        this.bufferBlob = new Blob(['']);\n        this.bufferText = '';\n        this.init(encoding);\n        Save.isMicrosoftBrowser = !(!navigator.msSaveBlob);\n    }\n    Object.defineProperty(StreamWriter.prototype, \"buffer\", {\n        /**\n         * Gets the content written to the StreamWriter as Blob.\n         * @returns Blob\n         */\n        get: function () {\n            this.flush();\n            return this.bufferBlob;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StreamWriter.prototype, \"encoding\", {\n        /**\n         * Gets the encoding.\n         * @returns Encoding\n         */\n        get: function () {\n            return this.enc;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StreamWriter.prototype.init = function (encoding) {\n        if (encoding === null || encoding === undefined) {\n            this.enc = new Encoding(false);\n            this.enc.type = 'Utf8';\n        }\n        else {\n            this.enc = encoding;\n            this.setBomByte();\n        }\n    };\n    /**\n     * Private method to set Byte Order Mark(BOM) value based on EncodingType\n     */\n    StreamWriter.prototype.setBomByte = function () {\n        if (this.encoding.includeBom) {\n            switch (this.encoding.type) {\n                case 'Unicode':\n                    var arrayUnicode = new ArrayBuffer(2);\n                    var uint8 = new Uint8Array(arrayUnicode);\n                    uint8[0] = 255;\n                    uint8[1] = 254;\n                    this.bufferBlob = new Blob([arrayUnicode]);\n                    break;\n                case 'Utf8':\n                    var arrayUtf8 = new ArrayBuffer(3);\n                    var utf8 = new Uint8Array(arrayUtf8);\n                    utf8[0] = 239;\n                    utf8[1] = 187;\n                    utf8[2] = 191;\n                    this.bufferBlob = new Blob([arrayUtf8]);\n                    break;\n                default:\n                    this.bufferBlob = new Blob(['']);\n                    break;\n            }\n        }\n    };\n    /**\n     * Saves the file with specified name and sends the file to client browser\n     * @param  {string} fileName - The file name to save\n     * @returns {void}\n     */\n    StreamWriter.prototype.save = function (fileName) {\n        if (this.bufferText !== '') {\n            this.flush();\n        }\n        Save.save(fileName, this.buffer);\n    };\n    /**\n     * Writes the specified string.\n     * @param  {string} value - The string to write. If value is null or undefined, nothing is written.\n     * @returns {void}\n     */\n    StreamWriter.prototype.write = function (value) {\n        if (this.encoding === undefined) {\n            throw new Error('Object Disposed Exception: current writer is disposed');\n        }\n        validateNullOrUndefined(value, 'string');\n        this.bufferText += value;\n        if (this.bufferText.length >= 10240) {\n            this.flush();\n        }\n    };\n    StreamWriter.prototype.flush = function () {\n        if (this.bufferText === undefined || this.bufferText === null || this.bufferText.length === 0) {\n            return;\n        }\n        var bufferArray = this.encoding.getBytes(this.bufferText, 0, this.bufferText.length);\n        this.bufferText = '';\n        this.bufferBlob = new Blob([this.bufferBlob, bufferArray]);\n    };\n    /**\n     * Writes the specified string followed by a line terminator\n     * @param  {string} value - The string to write. If value is null or undefined, nothing is written\n     * @returns {void}\n     */\n    StreamWriter.prototype.writeLine = function (value) {\n        if (this.encoding === undefined) {\n            throw new Error('Object Disposed Exception: current writer is disposed');\n        }\n        validateNullOrUndefined(value, 'string');\n        this.bufferText = this.bufferText + value + '\\r\\n';\n        if (this.bufferText.length >= 10240) {\n            this.flush();\n        }\n    };\n    /**\n     * Releases the resources used by the StreamWriter\n     * @returns {void}\n     */\n    StreamWriter.prototype.destroy = function () {\n        this.bufferBlob = undefined;\n        this.bufferText = undefined;\n        if (this.enc instanceof Encoding) {\n            this.enc.destroy();\n        }\n        this.enc = undefined;\n    };\n    return StreamWriter;\n}());\n\n// export all modules from current location\n// example: export * from './module'\n/**\n * file utils modules\n */\n\nexport { XmlWriter, Namespace, XmlElement, XmlAttribute, StreamWriter, Encoding, validateNullOrUndefined, Save };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}